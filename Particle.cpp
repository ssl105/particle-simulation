////////////////////////////////////////
// Particle.cpp
////////////////////////////////////////

#include "Particle.h"

////////////////////////////////////////////////////////////////////////////////

Particle::Particle(glm::vec3 pos, glm::vec3 vel, float m, int l) {
	mass = m;
	intialize(pos, vel, l);
}

////////////////////////////////////////////////////////////////////////////////

void Particle::intialize(glm::vec3 pos, glm::vec3 vel, int l) {
	position = pos;
	force = glm::vec3(0);
	velocity = vel;
	lifespan = l;
	life = 0;

}

////////////////////////////////////////////////////////////////////////////////

void Particle::applyForce(glm::vec3 f) {
	force += f;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::integrate(float deltaTime) {
	glm::vec3 accel = (1 / mass) * force;
	velocity += accel * deltaTime;
	position += velocity * deltaTime;

	force = glm::vec3(0);
	life++;
}

////////////////////////////////////////////////////////////////////////////////

int Particle::getLife() {
	return life;
}

////////////////////////////////////////////////////////////////////////////////

int Particle::getLifespan() {
	return lifespan;
}

////////////////////////////////////////////////////////////////////////////////

glm::vec3 Particle::getPosition() {
	return position;
}

////////////////////////////////////////////////////////////////////////////////

glm::vec3 Particle::getVelocity() {
	return velocity;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::setPosition(glm::vec3 pos) {
	position = pos;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::addVelocity(glm::vec3 v) {
	velocity += v;
}